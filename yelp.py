import requestsfrom bs4 import BeautifulSoupfrom collections import namedtupleimport logdef lookup(givenProvider, givenLocation):    specialtyList = ['Chiropractic', 'CHIROPRACTIC', 'Chiro', 'CHIRO', 'DC', 'Dc']    base_url = 'https://www.yelp.com/search?find_desc='    addr = city = _zip = state = 'NONE'    providerList = []    PROV = namedtuple('PROV', 'Name Address City State Zip Phone Specialty')    specialty = givenProvider    provider = givenProvider    location = givenLocation    pageNumber = 0    while pageNumber < 200:        url = base_url + provider + "&find_loc=" + location + "&start=" + str(pageNumber)        yelp_url = requests.get(url)        yelp_bs = BeautifulSoup(yelp_url.text, 'html.parser')        providers = yelp_bs.find_all('div', {'class': 'biz-listing-large'})        for elem in providers:            providerName = elem.findAll('a', {'class':'biz-name'})[0].text            try:                providerAddress = elem.findAll('address')[0].contents            except Exception as e:                log.loggingInfo(e)                providerAddress = 'NONE'            if providerAddress != 'NONE':                for line in providerAddress:                    if 'br' in str(line):                        city_state_zip = line.getText().strip(' \n\t\r').split(',')                        try:                            city, rest = city_state_zip                            rest = rest.split()                            state, _zip = rest                        except Exception as e:                            log.loggingInfo(e)                    else:                        addr = line.strip(' \n\t\r')            else:                addr = city = _zip = state = 'NONE'            try:                providerPhone = elem.findAll('span', {'class':'biz-phone'})[0].text.strip(' \n\t\r')                providerPhone = providerPhone.replace('(', '').replace(') ', '').replace('-', '')            except Exception as e:                log.loggingInfo(e)                providerPhone = 'NONE'            inst = PROV(providerName, addr, city, state, _zip, providerPhone, specialty)            providerList.append(inst)        pageNumber += 10            return providerList